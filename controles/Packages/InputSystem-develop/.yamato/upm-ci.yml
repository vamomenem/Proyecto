{% metadata_file .yamato/config.metadata %}
---

{% for editor in editors %}
{% for platform in platforms %}
{{ platform.name }}_{{ editor.version }}:
  name : Build and Test version {{ editor.version }} on {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor}}
  commands:
    # Install any extra .NET SDK's on images that don't have them, "docfx metadata" requires a .NET SDK to work.
{% if platform.netinstall %}
    - {{ platform.netinstall }}
{% endif %}
    # Get latest version of doctools package. Automatically makes the documentation tests in APIVerification go live.
    - git clone git@github.cds.internal.unity3d.com:unity/com.unity.package-manager-doctools.git Packages/com.unity.package-manager-doctools
    # We keep the samples in Assets/ as they otherwise won't get imported and you can't
    # really work with them. Move them into the package for when we run upm-ci here.
    - mv ./Assets/Samples ./Packages/com.unity.inputsystem
    - mv ./Assets/Samples.meta ./Packages/com.unity.inputsystem
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package pack --package-path ./Packages/com.unity.inputsystem/
    # Run upm-ci verification tests as well as tests contained in the package.
    - upm-ci package test --package-path ./Packages/com.unity.inputsystem/ -u {{ editor.version }}
    {% if platform.installscript %}
    - pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
    - {{ platform.installscript }} {{ editor.version }}
    {% endif %}
    # ADBv2 on 2019.4 causes the test runner to not start on initial import when the
    # samples are in the package. Move the samples back into the project.
    - mv ./Packages/com.unity.inputsystem/Samples ./Assets
    - mv ./Packages/com.unity.inputsystem/Samples.meta ./Assets
    # Now run our full test suite that sits in Assets/Tests by running UTR on our project.
    - upm-ci~/tools/utr/utr --testproject . --timeout=1200 --editor-location=.Editor --artifacts_path=upm-ci~/test-results/isolation-com.unity.inputsystem.tests --suite=playmode --api-profile=NET_4_6 --stdout-filter=minimal {% if platform.runtime %} --platform {{ platform.runtime }} {% endif %} {% if platform.scripting-backend %} --scripting-backend {{ platform.scripting-backend }} {% endif %} --report-performance-data --performance-project-id=InputSystem
  artifacts:
    UTR_Output.zip:
      paths:
        - "upm-ci~/test-results/**/*"
{% endfor %}
{% endfor %}

{% for editor in editors %}
build_ios_{{ editor.version }}:
  name: Build Tests on {{ editor.version }} on ios
  agent:
    type: Unity::VM::osx
    image: mobile/macos-10.15-testing:stable
    flavor: b1.large
  commands:
    - pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
    - unity-downloader-cli -c Editor -c iOS -u {{ editor.version }} --fast -w
    - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
    - chmod +x ./utr
    - ./utr --suite=playmode --platform=iOS --editor-location=.Editor --testproject=. --player-save-path=build/players --artifacts_path=build/logs --build-only --report-performance-data --performance-project-id=InputSystem
  artifacts:
    players:
        paths:
          - "build/players/**"
    logs:
        paths:
          - "build/logs/**"

run_ios_{{ editor.version }}:
  name: Run Tests on {{ editor.version }} on ios
  agent:
      type: Unity::mobile::iPhone
      image: mobile/macos-10.15-testing:stable
      flavor: b1.medium
  skip_checkout: true
  dependencies:
    - .yamato/upm-ci.yml#build_ios_{{ editor.version }}  
  commands:
    # Download standalone UnityTestRunner
    - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
    # Give UTR execution permissions
    - chmod +x ./utr
    # Run the test build on the device
    - ./utr --suite=playmode --platform=iOS --player-load-path=build/players --artifacts_path=build/test-results --report-performance-data --performance-project-id=InputSystem
  artifacts:
    logs:
        paths:
          - "build/test-results/**"

build_tvos_{{ editor.version }}:
  name: Build Tests on {{ editor.version }} on tvos
  agent:
    type: Unity::VM::osx
    image: mobile/macos-10.15-testing:stable
    flavor: b1.large
  commands:
    - pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
    - unity-downloader-cli -c Editor -c AppleTV -u {{ editor.version }} --fast -w
    - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
    - chmod +x ./utr
    - ./utr --suite=playmode --platform=tvOS --editor-location=.Editor --testproject=. --player-save-path=build/players --artifacts_path=build/logs --build-only --report-performance-data --performance-project-id=InputSystem
  artifacts:
    players:
        paths:
          - "build/players/**"
    logs:
        paths:
          - "build/logs/**"

{% for backend in scripting_backends %}
build_android_{{ editor.version }}_{{ backend.name }}:
  name: Build Tests on {{ editor.version }} on android {{ backend.name }}
  agent:
      type: Unity::VM
      image: mobile/android-execution-base:stable
      flavor: b1.xlarge
  commands:
    - pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
    - unity-downloader-cli -c Editor -c Android -u {{ editor.version }} --fast -w
    - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
    - ./utr.bat --suite=playmode --platform=Android --editor-location=.Editor --testproject=. --player-save-path=build/players --artifacts_path=build/logs --scripting-backend={{ backend.name }} --build-only --repository --performance-project-id=InputSystem
  artifacts:
    players:
        paths:
          - "build/players/**"
    logs:
        paths:
          - "build/logs/**"

run_android_{{ editor.version }}_{{ backend.name }}:
  name: Run Tests on {{ editor.version }} on android {{ backend.name }}
  agent:
      type: Unity::mobile::shield
      image: mobile/android-execution-base:stable
      flavor: b1.medium
  # Skip repository cloning
  skip_checkout: true
  # Set a dependency on the build job
  dependencies:
    - .yamato/upm-ci.yml#build_android_{{ editor.version }}_{{ backend.name }}  
  commands:
    - |
       # Download standalone UnityTestRunner
       curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
       # Set the IP of the device. In case device gets lost, UTR will try to recconect to ANDROID_DEVICE_CONNECTION
       set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
       # Establish an ADB connection with the device
       start %ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%
       # List the connected devices
       start %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
       ./utr --suite=playmode --platform=android --player-load-path=build/players --artifacts_path=build/test-results --report-performance-data --performance-project-id=InputSystem
  after:
    - start %ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%
    - if not exist build\test-results mkdir build\test-results
    - powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe logcat -d > build/test-results/device_log.txt
  # Set uploadable artifact paths
  artifacts:
    logs:
      paths:
        - "build/test-results/**"
{% endfor %}

{% endfor %}

all_tests:
  name: All Tests
  dependencies:
    {% for editor in editors %}
    {% for platform in platforms %}
    - .yamato/upm-ci.yml#{{ platform.name }}_{{ editor.version }}
    {% endfor %}
    {% for backend in scripting_backends %}
    - .yamato/upm-ci.yml#run_android_{{ editor.version }}_{{ backend.name }}  
    {% endfor %}
    - .yamato/upm-ci.yml#run_ios_{{ editor.version }}
    - .yamato/upm-ci.yml#build_tvos_{{ editor.version }}
    {% endfor %}
  triggers:
    cancel_old_ci: true
    pull_requests:
      - targets:
          only:
            - "develop"

publish:
  name: Publish to Internal Registry
  agent:
    type: Unity::VM
    image: package-ci/win10:stable
    flavor: b1.large
  commands:
    - mv ./Assets/Samples ./Packages/com.unity.inputsystem
    - mv ./Assets/Samples.meta ./Packages/com.unity.inputsystem
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package pack --package-path ./Packages/com.unity.inputsystem/
    - upm-ci package test --package-path ./Packages/com.unity.inputsystem/ -u 2019.4
    - upm-ci package publish --package-path ./Packages/com.unity.inputsystem/
  artifacts:
    artifacts:
      paths:
        - "upm-ci~/packages/*.tgz"
